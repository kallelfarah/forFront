{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/api/users';\n  }\n  createUser(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","createUser","user","post","getAllUsers","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\newsemantic\\semantic-front\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'http://localhost:8089/api/users';\n\n  constructor(private http: HttpClient) {}\n\n  createUser(user: Use): Observable<User> {\n    return this.http.post<User>(this.apiUrl, user);\n  }\n\n  getAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiUrl);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAEvCC,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAChD;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACL,MAAM,CAAC;EAC3C;EAAC,QAAAM,CAAA,G;qBAZUT,WAAW,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}