{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/User/Desktop/newsemantic/semantic-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/api/users';\n    this.apiUrl2 = 'http://localhost:8089/api/users/add';\n    this.apiUrl3 = 'http://localhost:8089/api/all';\n  }\n  createUser(user) {\n    return this.http.post(this.apiUrl2, user);\n  }\n  saveUser(user) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const url = `${_this.backUrl}save-user`;\n      const response = yield _this.http.post(url, user).toPromise();\n      return response;\n    })();\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl3);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","apiUrl2","apiUrl3","createUser","user","post","saveUser","_this","_asyncToGenerator","url","backUrl","response","toPromise","getAllUsers","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Desktop\\newsemantic\\semantic-front\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './model/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = 'http://localhost:8089/api/users';\n  private apiUrl2 = 'http://localhost:8089/api/users/add';\n  private apiUrl3 = 'http://localhost:8089/api/all';\n\n\n\n  constructor(private http: HttpClient) {}\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(this.apiUrl2, user);\n  }\n  async saveUser(user: User){\n    const url =`${this.backUrl}save-user`;\n    const response = await this.http.post<User>(url,user).toPromise();\n    return response;\n  }\n\n  getAllUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiUrl3);\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EAQtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,MAAM,GAAG,iCAAiC;IAC1C,KAAAC,OAAO,GAAG,qCAAqC;IAC/C,KAAAC,OAAO,GAAG,+BAA+B;EAIV;EAEvCC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACJ,OAAO,EAAEG,IAAI,CAAC;EACjD;EACME,QAAQA,CAACF,IAAU;IAAA,IAAAG,KAAA;IAAA,OAAAC,iBAAA;MACvB,MAAMC,GAAG,GAAE,GAAGF,KAAI,CAACG,OAAO,WAAW;MACrC,MAAMC,QAAQ,SAASJ,KAAI,CAACR,IAAI,CAACM,IAAI,CAAOI,GAAG,EAACL,IAAI,CAAC,CAACQ,SAAS,EAAE;MACjE,OAAOD,QAAQ;IAAC;EAClB;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAS,IAAI,CAACZ,OAAO,CAAC;EAC5C;EAAC,QAAAa,CAAA,G;qBArBUlB,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXvB,WAAW;IAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}